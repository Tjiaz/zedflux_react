{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\PROJECTS\\\\zedflux-react\\\\Frontend\\\\src\\\\BlogPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { formatDate } from \"./utils/dateFormatter\";\nimport defaultImage from \"./images/default_image.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeCategory, setActiveCategory] = useState(\"sports\");\n  useEffect(() => {\n    fetchCategoryPosts(activeCategory);\n  }, [activeCategory]);\n  const fetchCategoryPosts = async category => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://localhost:5000/api/posts/${category}`);\n      setPosts(response.data);\n      setLoading(false);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      // Extract error message properly\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || \"Failed to fetch posts\");\n      setLoading(false);\n    }\n  };\n  const handleImageError = e => {\n    e.target.src = defaultImage;\n    e.target.onerror = null;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  // Make sure to render error message as a string\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-tabs mb-4\",\n        children: [\"sports\", \"politics\", \"entertainment\"].map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn ${activeCategory === category ? \"btn-primary\" : \"btn-outline-primary\"} me-2`,\n          onClick: () => setActiveCategory(category),\n          children: category.toUpperCase()\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row gy-4 posts-list\",\n        children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-4 col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"article\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.image,\n                alt: post.title,\n                className: \"img-fluid\",\n                onError: handleImageError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"post-category\",\n              children: post.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: post.link,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-meta\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"post-date\",\n                children: /*#__PURE__*/_jsxDEV(\"time\", {\n                  dateTime: post.pubDate,\n                  children: formatDate(post.pubDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogPage, \"GJs15f8EvP/WCZ5PvbSjV1XphsE=\");\n_c = BlogPage;\nexport default BlogPage;\nvar _c;\n$RefreshReg$(_c, \"BlogPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","formatDate","defaultImage","jsxDEV","_jsxDEV","BlogPage","_s","posts","setPosts","loading","setLoading","error","setError","activeCategory","setActiveCategory","fetchCategoryPosts","category","response","get","data","err","_err$response","_err$response$data","message","handleImageError","e","target","src","onerror","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","map","onClick","toUpperCase","post","index","image","alt","title","onError","href","link","rel","dateTime","pubDate","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/PROJECTS/zedflux-react/Frontend/src/BlogPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { formatDate } from \"./utils/dateFormatter\";\r\nimport defaultImage from \"./images/default_image.png\";\r\n\r\nconst BlogPage = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [activeCategory, setActiveCategory] = useState(\"sports\");\r\n\r\n  useEffect(() => {\r\n    fetchCategoryPosts(activeCategory);\r\n  }, [activeCategory]);\r\n\r\n  const fetchCategoryPosts = async (category) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(\r\n        `http://localhost:5000/api/posts/${category}`\r\n      );\r\n      setPosts(response.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      // Extract error message properly\r\n      setError(\r\n        err.response?.data?.message || err.message || \"Failed to fetch posts\"\r\n      );\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n    const handleImageError = (e) => {\r\n      e.target.src = defaultImage;\r\n      e.target.onerror = null;\r\n    };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  // Make sure to render error message as a string\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n    <main id=\"main\">\r\n      <div className=\"container\">\r\n        <div className=\"category-tabs mb-4\">\r\n          {[\"sports\", \"politics\", \"entertainment\"].map((category) => (\r\n            <button\r\n              key={category}\r\n              className={`btn ${\r\n                activeCategory === category\r\n                  ? \"btn-primary\"\r\n                  : \"btn-outline-primary\"\r\n              } me-2`}\r\n              onClick={() => setActiveCategory(category)}\r\n            >\r\n              {category.toUpperCase()}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"row gy-4 posts-list\">\r\n          {posts.map((post, index) => (\r\n            <div key={index} className=\"col-xl-4 col-md-6\">\r\n              <article>\r\n                <div className=\"post-img\">\r\n                  <img\r\n                    src={post.image}\r\n                    alt={post.title}\r\n                    className=\"img-fluid\"\r\n                    onError={handleImageError}\r\n                  />\r\n                </div>\r\n\r\n                <p className=\"post-category\">{post.category}</p>\r\n\r\n                <h2 className=\"title\">\r\n                  <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {post.title}\r\n                  </a>\r\n                </h2>\r\n\r\n                <div className=\"post-meta\">\r\n                  <p className=\"post-date\">\r\n                    <time dateTime={post.pubDate}>\r\n                      {formatDate(post.pubDate)}\r\n                    </time>\r\n                  </p>\r\n                </div>\r\n              </article>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default BlogPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}